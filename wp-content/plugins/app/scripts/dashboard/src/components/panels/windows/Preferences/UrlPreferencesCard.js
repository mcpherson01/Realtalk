import './UrlPreferencesCard.css';

import FormControlLabel from '@material-ui/core/FormControlLabel';
import FormHelperText from '@material-ui/core/FormHelperText';
import InputLabel from '@material-ui/core/InputLabel';
import MenuItem from '@material-ui/core/MenuItem';
import React from 'react';
import Select from '@material-ui/core/Select';
import Switch from '@material-ui/core/Switch';
import _ from 'lodash';

import { HighWayPro } from '../../../../domain/highwaypro/HighWayPro';
import HorizontalField from '../../fields/HorizontalField';
import PreferencesCard from './PreferencesCard';

class UrlPreferencesCard extends PreferencesCard {
    static cardTitle = 'URLs';
    static cardText = '';

    preferencesType = 'url';

    render() {
        return (
        <React.Fragment>
            <FormControlLabel
              control={
                <Switch
                  checked={this.props.preferences.url.generateUrlsOnNewPosts_isEnabled}
                  onChange={this.toggle('generateUrlsOnNewPosts_isEnabled')}
                  value={this.props.preferences.url.generateUrlsOnNewPosts_isEnabled}
                  color="primary"
                />
              }
              label={HighWayPro.text.preferences.url.autogeneratedUrlEnableLabel}
              labelPlacement="start"
              className="hp-horizontal-field"
              classes={{label: 'hp-hf-description'}}
            />
            <HorizontalField 
                title={HighWayPro.text.preferences.url.autoGeneratedPathType.title}
                field={(<React.Fragment>
                    <InputLabel>Type</InputLabel>
                    <Select
                        className="MuiInput-underline MuiInputBase-input"
                        value={this.props.preferences.url.autoGeneratedPathType}
                        onChange={this.handleChange('autoGeneratedPathType')}
                        renderValue={value => _.capitalize(value)}
                        IconComponent={() => null}
                        fullWidth={false}
                        label="numeric"
                        >
                            {HighWayPro.preferences.url._allowed.autoGeneratedPathType.map(allowed => {
                                return (<MenuItem key={allowed} value={allowed}>
                                            {_.capitalize(allowed)}
                                        </MenuItem>);
                            })}
                    </Select>
                    <FormHelperText classes={{root: 'MuiFormHelperText'}}>{HighWayPro.text.preferences.url.autoGeneratedPathType.description}</FormHelperText>
                </React.Fragment>
                )} 
            />
            <HorizontalField 
                title={HighWayPro.text.preferences.url.autoGeneratedPathAlphanumericCase.title}
                field={(<React.Fragment>
                    <InputLabel>Letter Case</InputLabel>
                    <Select
                        className="MuiInput-underline MuiInputBase-input"
                        value={this.props.preferences.url.autoGeneratedPathAlphanumericCase}
                        onChange={this.handleChange('autoGeneratedPathAlphanumericCase')}
                        renderValue={value => _.capitalize(value)}
                        IconComponent={() => null}
                        fullWidth={false}
                        label="numeric"
                        >
                            {HighWayPro.preferences.url._allowed.autoGeneratedPathAlphanumericCase.map(allowed => {
                                return (<MenuItem key={allowed} value={allowed}>
                                            {_.capitalize(allowed)}
                                        </MenuItem>);
                            })}
                    </Select>
                    <FormHelperText classes={{root: 'MuiFormHelperText'}}>{HighWayPro.text.preferences.url.autoGeneratedPathAlphanumericCase.description}</FormHelperText>
                </React.Fragment>
                )} 
            />
            <HorizontalField 
                title={HighWayPro.text.preferences.url.autoGeneratedPathLength.title}
                field={(<React.Fragment>
                    <InputLabel>Length</InputLabel>
                    <Select
                        className="MuiInput-underline MuiInputBase-input"
                        value={this.props.preferences.url.autoGeneratedPathLength}
                        onChange={this.handleChange('autoGeneratedPathLength')}
                        renderValue={value => _.capitalize(value)}
                        IconComponent={() => null}
                        fullWidth={false}
                        label="numeric"
                        >
                            {_.range(3, 13).map(allowed => {
                                return (<MenuItem key={allowed} value={allowed}>
                                            {allowed}
                                        </MenuItem>);
                            })}
                    </Select>
                    <FormHelperText classes={{root: 'MuiFormHelperText'}}>{HighWayPro.text.preferences.url.autoGeneratedPathLength.description}</FormHelperText>
                </React.Fragment>
                )} 
            />
        </React.Fragment>
        );
    }
}

export default UrlPreferencesCard;